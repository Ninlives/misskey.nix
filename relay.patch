diff --git a/packages/backend/src/core/activitypub/ApInboxService.ts b/packages/backend/src/core/activitypub/ApInboxService.ts
index efef777fb..f073347db 100644
--- a/packages/backend/src/core/activitypub/ApInboxService.ts
+++ b/packages/backend/src/core/activitypub/ApInboxService.ts
@@ -25,6 +25,7 @@ import type { UsersRepository, NotesRepository, FollowingsRepository, AbuseUserR
 import { bindThis } from '@/decorators.js';
 import type { RemoteUser } from '@/models/entities/User.js';
 import { getApHrefNullable, getApId, getApIds, getApType, getOneApHrefNullable, isAccept, isActor, isAdd, isAnnounce, isBlock, isCollection, isCollectionOrOrderedCollection, isCreate, isDelete, isFlag, isFollow, isLike, isMove, isPost, isReject, isRemove, isTombstone, isUndo, isUpdate, validActor, validPost } from './type.js';
+import { isRelay } from './type.js';
 import { ApNoteService } from './models/ApNoteService.js';
 import { ApLoggerService } from './ApLoggerService.js';
 import { ApDbResolverService } from './ApDbResolverService.js';
@@ -145,11 +146,26 @@ export class ApInboxService {
 			await this.flag(actor, activity);
 		} else if (isMove(activity)) {
 			await this.move(actor, activity);
+		}	else if (isRelay(activity)) {
+			await this.relay(activity);
 		} else {
 			this.logger.warn(`unrecognized activity type: ${activity.type}`);
 		}
 	}
 
+	@bindThis
+	private async relay(activity: IRelay): Promise<void> {
+		const targetUri = getApId(activity.object);
+		const exist = await this.apNoteService.fetchNote(targetUri);
+		if (exist){
+			return;
+		}
+		const resolved = await this.apNoteService.resolveNote(targetUri);
+		if (resolved == null) {
+			this.logger.warn(`target relayed but cannot be resolved: ${targetUri}`);
+		}
+	}
+
 	@bindThis
 	private async follow(actor: RemoteUser, activity: IFollow): Promise<string> {
 		const followee = await this.apDbResolverService.getUserFromApId(activity.object);
diff --git a/packages/backend/src/core/activitypub/type.ts b/packages/backend/src/core/activitypub/type.ts
index 625135da6..81f7494a8 100644
--- a/packages/backend/src/core/activitypub/type.ts
+++ b/packages/backend/src/core/activitypub/type.ts
@@ -307,6 +307,10 @@ export interface IMove extends IActivity {
 	target: IObject | string;
 }
 
+export interface IRelay extends IActivity {
+	type: 'Relay';
+}
+
 export const isCreate = (object: IObject): object is ICreate => getApType(object) === 'Create';
 export const isDelete = (object: IObject): object is IDelete => getApType(object) === 'Delete';
 export const isUpdate = (object: IObject): object is IUpdate => getApType(object) === 'Update';
@@ -322,3 +326,4 @@ export const isAnnounce = (object: IObject): object is IAnnounce => getApType(ob
 export const isBlock = (object: IObject): object is IBlock => getApType(object) === 'Block';
 export const isFlag = (object: IObject): object is IFlag => getApType(object) === 'Flag';
 export const isMove = (object: IObject): object is IMove => getApType(object) === 'Move';
+export const isRelay = (object: IObject): object is IRelay => getApType(object) === 'Relay';
